Logging started at 20:40:06 on 15 Mar 2017
QIIME version: 1.9.1

qiime_config values:
pick_otus_reference_seqs_fp	/macqiime/anaconda/lib/python2.7/site-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta
sc_queue	all.q
pynast_template_alignment_fp	/macqiime/anaconda/lib/python2.7/site-packages/qiime_default_reference/gg_13_8_otus/rep_set_aligned/85_otus.pynast.fasta
cluster_jobs_fp	start_parallel_jobs.py
assign_taxonomy_reference_seqs_fp	/macqiime/anaconda/lib/python2.7/site-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta
torque_queue	friendlyq
jobs_to_start	1
denoiser_min_per_core	50
assign_taxonomy_id_to_taxonomy_fp	/macqiime/anaconda/lib/python2.7/site-packages/qiime_default_reference/gg_13_8_otus/taxonomy/97_otu_taxonomy.txt
temp_dir	/tmp/
blastall_fp	blastall
seconds_to_sleep	60

parameter file values:
parallel:jobs_to_start	1
pick_otus:enable_rev_strand_match	True

Input file md5 sums:
split_libs/seqs.fna: d9115d8bcd25932efa5bfa9d2c479e8f
/macqiime/anaconda/lib/python2.7/site-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta: 50b2269712b3738afb41892bed936c29

Forcing --suppress_new_clusters as this is reference-based OTU picking.

Executing commands.

# Pick Reference OTUs command 
pick_otus.py -i split_libs/seqs.fna -o otus_uc_fast//step1_otus -r /macqiime/anaconda/lib/python2.7/site-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta -m uclust_ref --enable_rev_strand_match --suppress_new_clusters

Stdout:

Stderr:

# Generate full failures fasta file command 
filter_fasta.py -f split_libs/seqs.fna -s otus_uc_fast//step1_otus/seqs_failures.txt -o otus_uc_fast//step1_otus/failures.fasta

Stdout:

Stderr:

Executing commands.

# Pick rep set command 
pick_rep_set.py -i otus_uc_fast//step1_otus/seqs_otus.txt -o otus_uc_fast//step1_otus/step1_rep_set.fna -f split_libs/seqs.fna

Stdout:

Stderr:

# Subsample the failures fasta file using API 
python -c "import qiime; qiime.util.subsample_fasta('/Users/nolson/Projects/mgtst_pipelines/qiime/otus_uc_fast/step1_otus/failures.fasta', '/Users/nolson/Projects/mgtst_pipelines/qiime/otus_uc_fast/step2_otus/subsampled_failures.fasta', '0.001000')

"Forcing --suppress_new_clusters as this is reference-based OTU picking.

Executing commands.

# Pick de novo OTUs for new clusters command 
pick_otus.py -i otus_uc_fast//step2_otus//subsampled_failures.fasta -o otus_uc_fast//step2_otus/ -m uclust  --denovo_otu_id_prefix New.ReferenceOTU --enable_rev_strand_match

Stdout:

Stderr:

# Pick representative set for subsampled failures command 
pick_rep_set.py -i otus_uc_fast//step2_otus//subsampled_failures_otus.txt -o otus_uc_fast//step2_otus//step2_rep_set.fna -f otus_uc_fast//step2_otus//subsampled_failures.fasta

Stdout:

Stderr:

# Pick reference OTUs using de novo rep set command 
pick_otus.py -i otus_uc_fast//step1_otus/failures.fasta -o otus_uc_fast//step3_otus/ -r otus_uc_fast//step2_otus//step2_rep_set.fna -m uclust_ref --enable_rev_strand_match --suppress_new_clusters

Stdout:

Stderr:

# Create fasta file of step3 failures command 
filter_fasta.py -f otus_uc_fast//step1_otus/failures.fasta -s otus_uc_fast//step3_otus//failures_failures.txt -o otus_uc_fast//step3_otus//failures_failures.fasta

Stdout:

Stderr:

# Pick de novo OTUs on step3 failures command 
pick_otus.py -i otus_uc_fast//step3_otus//failures_failures.fasta -o otus_uc_fast//step4_otus/ -m uclust  --denovo_otu_id_prefix New.CleanUp.ReferenceOTU --enable_rev_strand_match

Stdout:

Stderr:

# Merge OTU maps command 
cat otus_uc_fast//step1_otus/seqs_otus.txt otus_uc_fast//step3_otus//failures_otus.txt otus_uc_fast//step4_otus//failures_failures_otus.txt > otus_uc_fast//final_otu_map.txt

Stdout:

Stderr:

# Pick representative set for subsampled failures command 
pick_rep_set.py -i otus_uc_fast//step4_otus//failures_failures_otus.txt -o otus_uc_fast//step4_otus//step4_rep_set.fna -f otus_uc_fast//step3_otus//failures_failures.fasta

Stdout:

Stderr:

# Filter singletons from the otu map using API 
python -c "import qiime; qiime.filter.filter_otus_from_otu_map('/Users/nolson/Projects/mgtst_pipelines/qiime/otus_uc_fast/final_otu_map.txt', '/Users/nolson/Projects/mgtst_pipelines/qiime/otus_uc_fast/final_otu_map_mc2.txt', '2')"

# Write non-singleton otus representative sequences from step1 to the final rep set file: otus_uc_fast//rep_set.fna

# Copy the full input refseqs file to the new refseq file
cp /macqiime/anaconda/lib/python2.7/site-packages/qiime_default_reference/gg_13_8_otus/rep_set/97_otus.fasta otus_uc_fast//new_refseqs.fna

# Write non-singleton otus representative sequences from step 2 and step 4 to the final representative set and the new reference set (otus_uc_fast//rep_set.fna and otus_uc_fast//new_refseqs.fna respectively)

Executing commands.

# Make the otu table command 
make_otu_table.py -i otus_uc_fast//final_otu_map_mc2.txt -o otus_uc_fast//otu_table_mc2.biom

Stdout:

Stderr:

Executing commands.

# Assign taxonomy command 
assign_taxonomy.py -o otus_uc_fast//uclust_assigned_taxonomy -i otus_uc_fast//rep_set.fna 

Stdout:

Stderr:

Executing commands.

# Add taxa to OTU table command 
biom add-metadata -i otus_uc_fast//otu_table_mc2.biom --observation-metadata-fp otus_uc_fast//uclust_assigned_taxonomy/rep_set_tax_assignments.txt -o otus_uc_fast//otu_table_mc2_w_tax.biom --sc-separated taxonomy --observation-header OTUID,taxonomy

Stdout:

Stderr:

Executing commands.

# Align sequences command 
align_seqs.py -i otus_uc_fast//rep_set.fna -o otus_uc_fast//pynast_aligned_seqs 

Stdout:

Stderr:

# Filter alignment command 
filter_alignment.py -o otus_uc_fast//pynast_aligned_seqs -i otus_uc_fast//pynast_aligned_seqs/rep_set_aligned.fasta 

Stdout:

Stderr:

# Build phylogenetic tree command 
make_phylogeny.py -i otus_uc_fast//pynast_aligned_seqs/rep_set_aligned_pfiltered.fasta -o otus_uc_fast//rep_set.tre 

Stdout:

Stderr:

Executing commands.


Logging stopped at 21:34:39 on 15 Mar 2017
